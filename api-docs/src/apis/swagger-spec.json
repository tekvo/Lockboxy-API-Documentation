{
  "openapi": "3.0.0",
  "info": {
    "title": "LockBoxy",
    "description": "API documentation for Lockboxy services including form and table management.",
    "version": "v1",
    "contact": {
      "email": "thecrew@lockboxy.io"
    }
  },
  "paths": {
    "/?endpoint=form/list": {
      "get": {
        "operationId": "WorkspaceApiCallController_fetchAllForms",
        "summary": "Get a list of forms",
        "parameters": [
          {
            "name": "secret-key",
            "in": "header",
            "description": "Secret key for API access",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "description": "Page number for pagination.",
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": false,
            "description": "Number of items per page.",
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "data": {
                      "items": [
                        {
                          "formName": "test",
                          "formDescription": "",
                          "formID": "7c06a394-038c-4ae6-976e-484042f6fe5c",
                          "formGroupName": "dqwdqw"
                        },
                        {
                          "formName": "goverment scheme",
                          "formDescription": "central gov. scheme",
                          "formID": "f0808581-cb39-4d14-9a9d-0240a3a0d692",
                          "formGroupName": "dqwdqw"
                        }
                      ],
                      "pagination": {
                        "page": 1,
                        "pageSize": 10,
                        "totalItems": 3,
                        "totalPages": 1
                      }
                    },
                    "message": "Success",
                    "statusCode": 200,
                    "timestamp": "2024-02-26T11:17:59.050Z"
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "examples": {
                  "PackageExpiry": {
                    "value": {
                      "statusCode": 400,
                      "timestamp": "2024-02-26T10:39:53.710Z",
                      "error": "BadRequestException",
                      "data": {
                        "statusCode": 400,
                        "message": "Your package has expired. Please upgrade your package.",
                        "type": "PACKAGE_EXPIRED"
                      },
                      "message": "Your package has expired. Please upgrade your package."
                    }
                  },
                  "DeactivateAccount": {
                    "value": {
                      "statusCode": 400,
                      "timestamp": "2024-02-29T11:08:43.225Z",
                      "error": "BadRequestException",
                      "data": {
                        "statusCode": 400,
                        "message": "Your account is currently deactivated. Please activate your account to enjoy Notion services.",
                        "type": "DEACTIVATE_ACCOUNT"
                      },
                      "message": "Your account is currently deactivated. Please activate your account to enjoy Notion services"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException",
            "content": {
              "application/json": {
                "examples": {
                  "WrongSecretKey": {
                    "value": {
                      "statusCode": 401,
                      "timestamp": "2024-02-26T10:27:13.874Z",
                      "error": "UnauthorizedException",
                      "data": {
                        "statusCode": 401,
                        "message": "Unauthorized: Please double check this secret key",
                        "type": "UNAUTHORIZED"
                      },
                      "message": "Unauthorized: Please double check this secret key"
                    }
                  },
                  "PermissionDeniedResponse": {
                    "value": {
                      "statusCode": 401,
                      "timestamp": "2024-02-26T10:24:24.645Z",
                      "error": "UnauthorizedException",
                      "data": {
                        "statusCode": 401,
                        "message": "Permission denied. Please contact the administrator for assistance.",
                        "type": "PERMISSION_DENIED"
                      },
                      "message": "Permission denied. Please contact the administrator for assistance."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["Forms"]
      }
    },
    "/?endpoint=form/schema": {
      "get": {
        "operationId": "WorkspaceApiCallController_findFormSchemaByID",
        "summary": "Get form schema by ID",
        "parameters": [
          {
            "name": "secret-key",
            "in": "header",
            "description": "Secret key for API access",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "formID",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "data": {
                      "columnName": [
                        {
                          "Data": ""
                        },
                        {
                          "Tags": ""
                        },
                        {
                          "Name": ""
                        },
                        {
                          "File": ""
                        }
                      ],
                      "objectID": "d9ebb277-ee57-4412-b2e9-80e4b4d72cfa"
                    },
                    "message": "Success",
                    "statusCode": 200,
                    "timestamp": "2024-02-27T13:45:45.512Z"
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "examples": {
                  "PackageExpiry": {
                    "value": {
                      "statusCode": 400,
                      "timestamp": "2024-02-26T10:39:53.710Z",
                      "error": "BadRequestException",
                      "data": {
                        "statusCode": 400,
                        "message": "Your package has expired. Please upgrade your package.",
                        "type": "PACKAGE_EXPIRED"
                      },
                      "message": "Your package has expired. Please upgrade your package."
                    }
                  },
                  "PrivateOrPublicErrorResponse": {
                    "value": {
                      "statusCode": 400,
                      "timestamp": "2024-02-29T09:10:54.474Z",
                      "error": "BadRequestException",
                      "data": {
                        "statusCode": 400,
                        "message": "Access restricted: This form is private and can only be accessed within your workspace. our If made public, only users with the designated secret key can access it.",
                        "type": "PRIVATE_WORKSPACE_ACCESS_RESTRICTION"
                      },
                      "message": "Access restricted: This form is private and can only be accessed within your workspace. our If made public, only users with the designated secret key can access it."
                    }
                  },
                  "DeactivateAccount": {
                    "value": {
                      "statusCode": 400,
                      "timestamp": "2024-02-29T11:08:43.225Z",
                      "error": "BadRequestException",
                      "data": {
                        "statusCode": 400,
                        "message": "Your account is currently deactivated. Please activate your account to enjoy Notion services.",
                        "type": "DEACTIVATE_ACCOUNT"
                      },
                      "message": "Your account is currently deactivated. Please activate your account to enjoy Notion services"
                    }
                  },
                  "WrongFormIDResponse": {
                    "value": {
                      "statusCode": 400,
                      "timestamp": "2024-02-26T11:11:25.565Z",
                      "error": "BadRequestException",
                      "data": {
                        "statusCode": 404,
                        "message": "Data not available: The requested record does not exist, as our data service is currently disabled.",
                        "type": "RECORD_NOT_FOUND"
                      },
                      "message": "Data not available: The requested record does not exist, as our data service is currently disabled."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException",
            "content": {
              "application/json": {
                "examples": {
                  "WrongSecretKey": {
                    "value": {
                      "statusCode": 401,
                      "timestamp": "2024-02-26T10:27:13.874Z",
                      "error": "UnauthorizedException",
                      "data": {
                        "statusCode": 401,
                        "message": "Unauthorized: Please double check this secret key",
                        "type": "UNAUTHORIZED"
                      },
                      "message": "Unauthorized: Please double check this secret key"
                    }
                  },
                  "PermissionDeniedResponse": {
                    "value": {
                      "statusCode": 401,
                      "timestamp": "2024-02-26T10:24:24.645Z",
                      "error": "UnauthorizedException",
                      "data": {
                        "statusCode": 401,
                        "message": "Permission denied. Please contact the administrator for assistance.",
                        "type": "PERMISSION_DENIED"
                      },
                      "message": "Permission denied. Please contact the administrator for assistance."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["Forms"]
      }
    },
    "/?endpoint=form/save": {
      "post": {
        "operationId": "WorkspaceApiCallController_saveFormData",
        "summary": "Save data by form ID",
        "parameters": [
          {
            "name": "secret-key",
            "in": "header",
            "description": "Secret key for API access",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CustomFormDataDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "data": {
                      "statusCode": 200,
                      "message": "Form submitted successfully!!",
                      "type": "ADDED"
                    },
                    "message": "Success",
                    "statusCode": 200,
                    "timestamp": "2024-02-26T16:25:15.580Z"
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "examples": {
                  "PackageExpiry": {
                    "value": {
                      "statusCode": 400,
                      "timestamp": "2024-02-26T10:39:53.710Z",
                      "error": "BadRequestException",
                      "data": {
                        "statusCode": 400,
                        "message": "Your package has expired. Please upgrade your package.",
                        "type": "PACKAGE_EXPIRED"
                      },
                      "message": "Your package has expired. Please upgrade your package."
                    }
                  },
                  "PrivateOrPublicErrorResponse": {
                    "value": {
                      "statusCode": 400,
                      "timestamp": "2024-02-29T09:10:54.474Z",
                      "error": "BadRequestException",
                      "data": {
                        "statusCode": 400,
                        "message": "Access restricted: This form is private and can only be accessed within your workspace. our If made public, only users with the designated secret key can access it.",
                        "type": "PRIVATE_WORKSPACE_ACCESS_RESTRICTION"
                      },
                      "message": "Access restricted: This form is private and can only be accessed within your workspace. our If made public, only users with the designated secret key can access it."
                    }
                  },
                  "DeactivateAccount": {
                    "value": {
                      "statusCode": 400,
                      "timestamp": "2024-02-29T11:08:43.225Z",
                      "error": "BadRequestException",
                      "data": {
                        "statusCode": 400,
                        "message": "Your account is currently deactivated. Please activate your account to enjoy Notion services.",
                        "type": "DEACTIVATE_ACCOUNT"
                      },
                      "message": "Your account is currently deactivated. Please activate your account to enjoy Notion services"
                    }
                  },
                  "NotionTokenErrorResponse": {
                    "value": {
                      "statusCode": 400,
                      "timestamp": "2024-02-27T13:47:51.598Z",
                      "error": "BadRequestException",
                      "data": {
                        "statusCode": 401,
                        "message": "Kindly reach out to the administrator to reset the Notion workspace token. Thank you.",
                        "type": "UNAUTHORIZED_NOTION_TOKEN"
                      },
                      "message": "Kindly reach out to the administrator to reset the Notion workspace token. Thank you."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException",
            "content": {
              "application/json": {
                "examples": {
                  "WrongSecretKey": {
                    "value": {
                      "statusCode": 401,
                      "timestamp": "2024-02-26T10:27:13.874Z",
                      "error": "UnauthorizedException",
                      "data": {
                        "statusCode": 401,
                        "message": "Unauthorized: Please double check this secret key",
                        "type": "UNAUTHORIZED"
                      },
                      "message": "Unauthorized: Please double check this secret key"
                    }
                  },
                  "PermissionDeniedResponse": {
                    "value": {
                      "statusCode": 401,
                      "timestamp": "2024-02-26T10:24:24.645Z",
                      "error": "UnauthorizedException",
                      "data": {
                        "statusCode": 401,
                        "message": "Permission denied. Please contact the administrator for assistance.",
                        "type": "PERMISSION_DENIED"
                      },
                      "message": "Permission denied. Please contact the administrator for assistance."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["Forms"]
      }
    },
    "/?endpoint=table/list": {
      "get": {
        "operationId": "WorkspaceApiCallController_fetchTableList",
        "summary": "Get a list of tables",
        "parameters": [
          {
            "name": "secret-key",
            "in": "header",
            "description": "Secret key for API access",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "description": "Page number for pagination.",
            "in": "query",
            "schema": {
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "description": "Number of items per page.",
            "required": false,
            "in": "query",
            "schema": {
              "default": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "data": {
                      "items": [
                        {
                          "tableName": "twes",
                          "tableDescription": "D",
                          "tableID": "820a6677-5939-41c2-ba6b-8ad3721bc2b3",
                          "tableGroupName": "TEST"
                        },
                        {
                          "tableName": "Stater_package_Goverment_policy",
                          "tableDescription": "dffwefwe",
                          "tableID": "1ed74617-a443-421f-b46b-25eb14558832",
                          "tableGroupName": "sdw"
                        }
                      ],
                      "pagination": {
                        "page": 1,
                        "pageSize": 10,
                        "totalItems": 3,
                        "totalPages": 1
                      }
                    },
                    "message": "Success",
                    "statusCode": 200,
                    "timestamp": "2024-02-26T11:31:28.057Z"
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "examples": {
                  "PackageExpiry": {
                    "value": {
                      "statusCode": 400,
                      "timestamp": "2024-02-26T10:39:53.710Z",
                      "error": "BadRequestException",
                      "data": {
                        "statusCode": 400,
                        "message": "Your package has expired. Please upgrade your package.",
                        "type": "PACKAGE_EXPIRED"
                      },
                      "message": "Your package has expired. Please upgrade your package."
                    }
                  },
                  "DeactivateAccount": {
                    "value": {
                      "statusCode": 400,
                      "timestamp": "2024-02-29T11:08:43.225Z",
                      "error": "BadRequestException",
                      "data": {
                        "statusCode": 400,
                        "message": "Your account is currently deactivated. Please activate your account to enjoy Notion services.",
                        "type": "DEACTIVATE_ACCOUNT"
                      },
                      "message": "Your account is currently deactivated. Please activate your account to enjoy Notion services"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException",
            "content": {
              "application/json": {
                "examples": {
                  "WrongSecretKey": {
                    "value": {
                      "statusCode": 401,
                      "timestamp": "2024-02-26T10:27:13.874Z",
                      "error": "UnauthorizedException",
                      "data": {
                        "statusCode": 401,
                        "message": "Unauthorized: Please double check this secret key",
                        "type": "UNAUTHORIZED"
                      },
                      "message": "Unauthorized: Please double check this secret key"
                    }
                  },
                  "PermissionDeniedResponse": {
                    "value": {
                      "statusCode": 401,
                      "timestamp": "2024-02-26T10:24:24.645Z",
                      "error": "UnauthorizedException",
                      "data": {
                        "statusCode": 401,
                        "message": "Permission denied. Please contact the administrator for assistance.",
                        "type": "PERMISSION_DENIED"
                      },
                      "message": "Permission denied. Please contact the administrator for assistance."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["Tables"]
      }
    },
    "/?endpoint=table": {
      "post": {
        "operationId": "WorkspaceApiCallController_fetchFormData",
        "summary": "Get Data by table ID",
        "parameters": [
          {
            "name": "secret-key",
            "in": "header",
            "description": "Secret key for API access",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NotionQueryDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "example": {
                    "data": {
                      "data": [
                        {
                          "id": "21e85f58-fa2e-488a-a07b-9d067dc995ff",
                          "space_id": "235adda5-4aeb-4112-9149-fde1c0422fd4",
                          "Id_Number": null,
                          "key": "eX@K",
                          "type": "number",
                          "Id_pic": "",
                          "Home_pic": "",
                          "Upload Pic": ""
                        }
                      ],
                      "schema": [
                        {
                          "_id": "65dabad9c1fad9823b6a3624",
                          "pageId": "4b188316-360e-40be-af1e-5d639b8d31c6",
                          "viewId": "89a26eab-cd2a-4406-91aa-922aed54c367",
                          "hubTableID": 39,
                          "name": "Amount ",
                          "field": "Amount ",
                          "type": "number",
                          "editor": "input",
                          "title": "Amount ",
                          "editorParams": {
                            "multiselect": false
                          },
                          "notionCellCode": "<vNI",
                          "hideFieldData": false,
                          "pii": false,
                          "onlyVisibleAdmin": false,
                          "options": [],
                          "createdByUser": "2",
                          "createdAt": "2024-02-25T03:58:17.448Z",
                          "updatedAt": "2024-02-25T03:58:17.448Z",
                          "__v": 0
                        }
                      ],
                      "space_id": "235adda5-4aeb-4112-9149-fde1c0422fd4",
                      "parent_id": "af93dcce-056e-49f0-9d95-0487f48ce2fd",
                      "notionUserId": "896aac3c-a68b-4558-bdf2-5082975568d0",
                      "totalRecords": 5,
                      "hasMore": false
                    },
                    "message": "Success",
                    "statusCode": 200,
                    "timestamp": "2024-02-26T16:02:10.018Z"
                  }
                }
              }
            }
          },
          "400": {
            "description": "BadRequestException",
            "content": {
              "application/json": {
                "examples": {
                  "PackageExpiry": {
                    "value": {
                      "statusCode": 400,
                      "timestamp": "2024-02-26T10:39:53.710Z",
                      "error": "BadRequestException",
                      "data": {
                        "statusCode": 400,
                        "message": "Your package has expired. Please upgrade your package.",
                        "type": "PACKAGE_EXPIRED"
                      },
                      "message": "Your package has expired. Please upgrade your package."
                    }
                  },
                  "DeactivateAccount": {
                    "value": {
                      "statusCode": 400,
                      "timestamp": "2024-02-29T11:08:43.225Z",
                      "error": "BadRequestException",
                      "data": {
                        "statusCode": 400,
                        "message": "Your account is currently deactivated. Please activate your account to enjoy Notion services.",
                        "type": "DEACTIVATE_ACCOUNT"
                      },
                      "message": "Your account is currently deactivated. Please activate your account to enjoy Notion services"
                    }
                  },
                  "ObjectLevelAccessErrorResponse": {
                    "value": {
                      "statusCode": 400,
                      "timestamp": "2024-02-27T04:00:25.722Z",
                      "error": "BadRequestException",
                      "data": {
                        "statusCode": 401,
                        "message": "Permission denied. Please contact the administrator for assistance.",
                        "type": "PERMISSION_DENIED"
                      },
                      "message": "Permission denied. Please contact the administrator for assistance."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "UnauthorizedException",
            "content": {
              "application/json": {
                "examples": {
                  "WrongSecretKey": {
                    "value": {
                      "statusCode": 401,
                      "timestamp": "2024-02-26T10:27:13.874Z",
                      "error": "UnauthorizedException",
                      "data": {
                        "statusCode": 401,
                        "message": "Unauthorized: Please double check this secret key",
                        "type": "UNAUTHORIZED"
                      },
                      "message": "Unauthorized: Please double check this secret key"
                    }
                  },
                  "PermissionDeniedResponse": {
                    "value": {
                      "statusCode": 401,
                      "timestamp": "2024-02-26T10:24:24.645Z",
                      "error": "UnauthorizedException",
                      "data": {
                        "statusCode": 401,
                        "message": "Permission denied. Please contact the administrator for assistance.",
                        "type": "PERMISSION_DENIED"
                      },
                      "message": "Permission denied. Please contact the administrator for assistance."
                    }
                  }
                }
              }
            }
          }
        },
        "tags": ["Tables"]
      }
    }
  },
  "tags": ["APIs"],
  "servers": [
    {
      "url": "https://api.lockboxy.io/"
    }
  ],
  "components": {
    "securitySchemes": {
      "access-token": {
        "description": "Secret key for API access.",
        "name": "secret-key",
        "type": "http",
        "in": "Header",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "schemas": {
      "Filter": {
        "type": "object",
        "properties": {
          "column": {
            "type": "string",
            "example": "notion cell code"
          },
          "operator": {
            "type": "string",
            "example": "operator"
          },
          "value": {
            "type": "string",
            "example": "value for filter"
          }
        },
        "required": ["column", "operator", "value"]
      },
      "NotionQueryDto": {
        "type": "object",
        "properties": {
          "searchQuery": {
            "type": "string",
            "example": "search query"
          },
          "column": {
            "type": "string",
            "example": "notion cell code"
          },
          "direction": {
            "type": "string",
            "example": "asc/desc"
          },
          "limit": {
            "type": "number",
            "example": "10"
          },
          "filter": {
            "example": [
              {
                "operator": "string_is",
                "value": "value",
                "column": "title"
              }
            ],
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Filter"
            }
          },
          "referenceObjectID": {
            "description": "The ID of the hub table",
            "example": "permissions",
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Options": {
        "type": "object",
        "properties": {
          "option": {
            "type": "string",
            "example": "this is column name"
          },
          "color": {
            "type": "string",
            "example": "this is column type"
          }
        }
      },
      "FormData": {
        "type": "object",
        "properties": {
          "hubTableID": {
            "type": "string"
          },
          "notionCellCode": {
            "type": "string"
          },
          "value": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "CustomFormDataDto": {
        "type": "object",
        "properties": {
          "objectID": {
            "type": "string",
            "example": "f0808581-cb39-14-9a9d-0240a3a0d6"
          },
          "columnName": {
            "type": "string",
            "example": [
              {
                "ID_Proof": "kjdjbe"
              },
              {
                "Id_Number": "sdjksid"
              },
              {
                "Name": "dkjcnks"
              },
              {
                "Upload_Pic": "sjnd"
              },
              {
                "Hobbies": "jbdiuy"
              }
            ]
          }
        },
        "required": ["objectID", "columnName"]
      }
    }
  }
}
